  // Copyright (c) Obelisk Labs, Inc.
  // SPDX-License-Identifier: Apache-2.0
  #[allow(unused_use)]
  
  /* Autogenerated file. Do not edit manually. */
  
  module numeron::errors {

  #[error]

  const NotOwner: vector<u8> = b"Not the owner of this creature";

  public fun not_owner_error(condition: bool) {
    assert!(condition, NotOwner)
  }

  #[error]

  const InvalidMove: vector<u8> = b"Invalid movement";

  public fun invalid_move_error(condition: bool) {
    assert!(condition, InvalidMove)
  }

  #[error]

  const MapNotFound: vector<u8> = b"Map does not exist";

  public fun map_not_found_error(condition: bool) {
    assert!(condition, MapNotFound)
  }

  #[error]

  const CreatureNotFound: vector<u8> = b"Creature does not exist";

  public fun creature_not_found_error(condition: bool) {
    assert!(condition, CreatureNotFound)
  }

  #[error]

  const InsufficientLevel: vector<u8> = b"Creature level too low";

  public fun insufficient_level_error(condition: bool) {
    assert!(condition, InsufficientLevel)
  }

  #[error]

  const AlreadyRegistered: vector<u8> = b"Already registered";

  public fun already_registered_error(condition: bool) {
    assert!(condition, AlreadyRegistered)
  }

  #[error]

  const InvalidExtension: vector<u8> = b"Invalid extension data";

  public fun invalid_extension_error(condition: bool) {
    assert!(condition, InvalidExtension)
  }

  #[error]

  const UnauthorizedCreator: vector<u8> = b"Unauthorized map creator";

  public fun unauthorized_creator_error(condition: bool) {
    assert!(condition, UnauthorizedCreator)
  }
}
