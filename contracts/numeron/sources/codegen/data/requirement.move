  // Copyright (c) Obelisk Labs, Inc.
  // SPDX-License-Identifier: Apache-2.0
  #[allow(unused_use)]
  
  /* Autogenerated file. Do not edit manually. */
  
  module numeron::requirement {

  use std::ascii::String;

  use numeron::creature_type::CreatureType;

  use numeron::rarity::Rarity;

  use numeron::terrain_type::TerrainType;

  use numeron::battle_result::BattleResult;

  use numeron::weather_type::WeatherType;

  use numeron::region_type::RegionType;

  use numeron::connection_type::ConnectionType;

  public struct Requirement has copy, drop, store {
    requirement_type: String,
    value: vector<u8>,
  }

  public fun new(requirement_type: String, value: vector<u8>): Requirement {
    Requirement {
                                   requirement_type,value
                               }
  }

  public fun get(self: &Requirement): (String,vector<u8>) {
    (self.requirement_type,self.value)
  }

  public fun get_requirement_type(self: &Requirement): String {
    self.requirement_type
  }

  public fun get_value(self: &Requirement): vector<u8> {
    self.value
  }

  public(package) fun set_requirement_type(self: &mut Requirement, requirement_type: String) {
    self.requirement_type = requirement_type;
  }

  public(package) fun set_value(self: &mut Requirement, value: vector<u8>) {
    self.value = value;
  }

  public(package) fun set(self: &mut Requirement, requirement_type: String, value: vector<u8>) {
    self.requirement_type = requirement_type;
    self.value = value;
  }
}
